# Generated by Django 4.2.18 on 2025-01-26 12:06

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="CheckList",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("warmup_physical", models.BooleanField(default=False)),
                ("warmup_mental", models.BooleanField(default=False)),
                ("pmr", models.BooleanField(default=False)),
                ("visualization", models.BooleanField(default=False)),
                ("breathing", models.BooleanField(default=False)),
                ("self_talk", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="Drill",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="MatchDetail",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("tournament", models.CharField(max_length=1000)),
                ("venue", models.CharField(max_length=1000)),
                ("date", models.DateField()),
                ("event", models.CharField(max_length=1000)),
                ("round", models.CharField(max_length=1000)),
                ("opponent", models.CharField(max_length=100)),
                ("academy", models.CharField(max_length=100)),
                (
                    "playing_hand",
                    models.CharField(
                        choices=[("right", "Right"), ("left", "Left")],
                        default="right",
                        max_length=10,
                    ),
                ),
                ("dist_or_state", models.CharField(max_length=100)),
                ("forehand_rubber", models.CharField(max_length=1000)),
                ("backhand_rubber", models.CharField(max_length=1000)),
                ("blade", models.CharField(max_length=1000)),
                ("strength", models.TextField()),
                ("weakness", models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name="OthersMatch",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("other_type", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "match_detail",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="others",
                        to="api.matchdetail",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Player",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("category", models.CharField(max_length=100)),
                ("academy_name", models.CharField(max_length=100)),
                ("dist_or_state", models.CharField(max_length=100)),
                ("forehand_rubber", models.CharField(max_length=1000)),
                ("backhand_rubber", models.CharField(max_length=1000)),
                ("blade", models.CharField(max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name="Rally",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("rally_type", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "player",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="rallies",
                        to="api.player",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RallyMatch",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("rally_type", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "match_detail",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="rallies",
                        to="api.matchdetail",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Receive",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("receive_type", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "player",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="receives",
                        to="api.player",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ReceiveMatch",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("receive_type", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "match_detail",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="receives",
                        to="api.matchdetail",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Serve",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("serve_type", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "player",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="serves",
                        to="api.player",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ServeMatch",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("serve_type", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "match_detail",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="serves",
                        to="api.matchdetail",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SetScore",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("set_number", models.IntegerField()),
                ("player_1_points", models.IntegerField()),
                ("player_2_points", models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name="Stroke",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("start_x", models.FloatField()),
                ("start_y", models.FloatField()),
                ("end_x", models.FloatField()),
                ("end_y", models.FloatField()),
                ("action", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "drill",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="strokes",
                        to="api.drill",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ServePlacementMatch",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("start_x", models.FloatField()),
                ("start_y", models.FloatField()),
                ("end_x", models.FloatField()),
                ("end_y", models.FloatField()),
                (
                    "placement_type",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "serve",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="placements",
                        to="api.servematch",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ServePlacement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("start_x", models.FloatField()),
                ("start_y", models.FloatField()),
                ("end_x", models.FloatField()),
                ("end_y", models.FloatField()),
                (
                    "placement_type",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "serve",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="placements",
                        to="api.serve",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ReceivePlacementMatch",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("start_x", models.FloatField()),
                ("start_y", models.FloatField()),
                ("end_x", models.FloatField()),
                ("end_y", models.FloatField()),
                (
                    "placement_type",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "receive",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="placements",
                        to="api.receivematch",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ReceivePlacement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("start_x", models.FloatField()),
                ("start_y", models.FloatField()),
                ("end_x", models.FloatField()),
                ("end_y", models.FloatField()),
                (
                    "placement_type",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "receive",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="placements",
                        to="api.receive",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RallyPlacementMatch",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("start_x", models.FloatField()),
                ("start_y", models.FloatField()),
                ("end_x", models.FloatField()),
                ("end_y", models.FloatField()),
                (
                    "rally",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="placements",
                        to="api.rallymatch",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RallyPlacement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("start_x", models.FloatField()),
                ("start_y", models.FloatField()),
                ("end_x", models.FloatField()),
                ("end_y", models.FloatField()),
                (
                    "rally",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="placements",
                        to="api.rally",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PrePractice",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("obj", models.TextField()),
                ("goals", models.TextField()),
                (
                    "yesterdays_nutrition_level",
                    models.IntegerField(
                        choices=[(1, "1"), (2, "2"), (3, "3"), (4, "4"), (5, "5")]
                    ),
                ),
                (
                    "energy_level",
                    models.IntegerField(
                        choices=[(1, "1"), (2, "2"), (3, "3"), (4, "4"), (5, "5")]
                    ),
                ),
                (
                    "sleep_quality",
                    models.IntegerField(
                        choices=[(1, "1"), (2, "2"), (3, "3"), (4, "4"), (5, "5")]
                    ),
                ),
                (
                    "stress_level",
                    models.IntegerField(
                        choices=[(1, "1"), (2, "2"), (3, "3"), (4, "4"), (5, "5")]
                    ),
                ),
                (
                    "motivation_level",
                    models.IntegerField(
                        choices=[(1, "1"), (2, "2"), (3, "3"), (4, "4"), (5, "5")]
                    ),
                ),
                (
                    "player",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="pre_practices",
                        to="api.player",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PreMatch",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("match_progress_goals", models.TextField()),
                ("strategies_and_tactics", models.TextField()),
                ("keywords", models.TextField()),
                (
                    "match_details",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.matchdetail",
                    ),
                ),
                (
                    "others",
                    models.ManyToManyField(
                        blank=True, related_name="pre_matches", to="api.othersmatch"
                    ),
                ),
                (
                    "pre_match_checklist",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="api.checklist"
                    ),
                ),
                (
                    "rallies",
                    models.ManyToManyField(
                        blank=True, related_name="pre_matches", to="api.rallymatch"
                    ),
                ),
                (
                    "receives",
                    models.ManyToManyField(
                        blank=True, related_name="pre_matches", to="api.receivematch"
                    ),
                ),
                (
                    "serves",
                    models.ManyToManyField(
                        blank=True, related_name="pre_matches", to="api.servematch"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PostPractice",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("emotions_and_reason", models.TextField()),
                (
                    "focus_level",
                    models.IntegerField(
                        choices=[(1, "1"), (2, "2"), (3, "3"), (4, "4"), (5, "5")]
                    ),
                ),
                (
                    "motivation_level",
                    models.IntegerField(
                        choices=[(1, "1"), (2, "2"), (3, "3"), (4, "4"), (5, "5")]
                    ),
                ),
                (
                    "managing_emotion",
                    models.IntegerField(
                        choices=[(1, "1"), (2, "2"), (3, "3"), (4, "4"), (5, "5")]
                    ),
                ),
                (
                    "satisfaction_level",
                    models.IntegerField(
                        choices=[(1, "1"), (2, "2"), (3, "3"), (4, "4"), (5, "5")]
                    ),
                ),
                (
                    "improvement_level",
                    models.IntegerField(
                        choices=[(1, "1"), (2, "2"), (3, "3"), (4, "4"), (5, "5")]
                    ),
                ),
                ("areas_of_happy", models.TextField()),
                ("things_happened", models.TextField()),
                ("skills_learnt", models.TextField()),
                ("what_couldve_done_better", models.TextField()),
                (
                    "player",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="post_practices",
                        to="api.player",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PostMatch",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("won", models.BooleanField(default=False)),
                ("execution_of_plan", models.TextField()),
                ("positive_technical", models.TextField()),
                ("positive_tactical", models.TextField()),
                ("positive_mental", models.TextField()),
                ("positive_physical", models.TextField()),
                ("to_be_improved", models.TextField()),
                ("different_approach", models.TextField()),
                ("lessons", models.TextField()),
                ("Notes", models.TextField()),
                (
                    "score",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="api.setscore"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PlayerProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("tactical_strength", models.TextField()),
                ("technical_strength", models.TextField()),
                ("mental_strength", models.TextField()),
                ("tactical_weakness", models.TextField()),
                ("technical_weakness", models.TextField()),
                ("mental_weakness", models.TextField()),
                ("general_match_strategy", models.TextField()),
                (
                    "player",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="player",
                        to="api.player",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="OtherPlacementMatch",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("start_x", models.FloatField()),
                ("start_y", models.FloatField()),
                ("end_x", models.FloatField()),
                ("end_y", models.FloatField()),
                (
                    "other",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="placements",
                        to="api.othersmatch",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="drill",
            name="pre_practice",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="drills",
                to="api.prepractice",
            ),
        ),
    ]
